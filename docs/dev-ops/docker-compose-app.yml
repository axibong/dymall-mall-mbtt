# 命令执行 docker-compose -f docker-compose-app.yml up -d
version: '3.8'
services:
  dymall-mbtt-service:  # 服务名称与spring.application.name对应
    image: dymall-mbtt-service:1.0  # dymall-mbtt-service:1.0）
    container_name: dymall-mbtt-service
    restart: always
    ports:
      - "8080:8080"  # 外部端口映射（与server.port一致）
    environment:
      - TZ=Asia/Shanghai
      - SERVER_PORT=8080
      # 动态变量注入（从环境变量读取）
      - dy.db.host=mysql  # Docker网络中MySQL服务名
      - dy.db.pw=your_mysql_password  # 替换为你的MySQL root密码
      # Spring配置
      - spring.application.name=dymall-mbtt-service
      - spring.profiles.active=dev
      # 数据库连接
      - spring.datasource.url=jdbc:mysql://${dy.db.host}:3306/dymall?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - spring.datasource.username=root
      - spring.datasource.password=${dy.db.pw}
      # JWT安全配置
      - jwt.secret=your_jwt_secret_key  # 替换为你的密钥
      - jwt.expiration=604800
      # Redis配置（如需）
      - redis.host=redis
      - redis.port=6379
    volumes:
      - ./logs:/app/logs  # 日志持久化目录（与logging.file.path对应）
    networks:
      - my-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  my-network:
    driver: bridge